// Generated by view binder compiler. Do not edit!
package com.example.series.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.series.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySeriesDataBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Title;

  @NonNull
  public final TextView Year;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView imageSerie;

  @NonNull
  public final Button retrn;

  private ActivitySeriesDataBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Title,
      @NonNull TextView Year, @NonNull TextView description, @NonNull ImageView imageSerie,
      @NonNull Button retrn) {
    this.rootView = rootView;
    this.Title = Title;
    this.Year = Year;
    this.description = description;
    this.imageSerie = imageSerie;
    this.retrn = retrn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySeriesDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySeriesDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_series_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySeriesDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Title;
      TextView Title = ViewBindings.findChildViewById(rootView, id);
      if (Title == null) {
        break missingId;
      }

      id = R.id.Year;
      TextView Year = ViewBindings.findChildViewById(rootView, id);
      if (Year == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.image_serie;
      ImageView imageSerie = ViewBindings.findChildViewById(rootView, id);
      if (imageSerie == null) {
        break missingId;
      }

      id = R.id.retrn;
      Button retrn = ViewBindings.findChildViewById(rootView, id);
      if (retrn == null) {
        break missingId;
      }

      return new ActivitySeriesDataBinding((ConstraintLayout) rootView, Title, Year, description,
          imageSerie, retrn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
